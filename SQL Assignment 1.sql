use  sakila;
-- Question 1:
-- Retrieve the total number of rentals made in the Sakila database.
-- Hint: Use the COUNT() function.

select *from rental;
select count(rental_id) from rental;     #16044

-- Question 2:
-- Find the average rental duration (in days) of movies rented from the Sakila database.
-- Hint: Utilize the AVG() function.

select round(avg(datediff(return_date, rental_date)),2) as avg_rental_duration from rental;


-- Question 3:
-- Display the first name and last name of customers in uppercase.
-- Hint: Use the UPPER () function.
select *from customer;
select upper(first_name), upper(last_name) from customer;

-- Question 4:
-- Extract the month from the rental date and display it alongside the rental ID.
-- Hint: Employ the MONTH() function.
select *from rental;
select rental_id, month(rental_date) as rental_month from rental;

-- Question 5:
-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
-- Hint: Use COUNT () in conjunction with GROUP BY.

select customer_id ,count(rental_id) as count_of_rentals from rental
group by(customer_id);

-- Question 6:
-- Find the total revenue generated by each store.
-- Hint: Combine SUM() and GROUP BY.
select *from payment;
select customer.store_id, round(sum(payment.amount),2) as revenue_of_each_store 
from customer join payment 
on 
customer.customer_id = payment.customer_id
group by customer.store_id;

-- Question 7:
-- Determine the total number of rentals for each category of movies.
-- Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY.
select *from film;
select *from rental;
select *from film_category;
select *from inventory;

SELECT 
    c.name AS Category_Name,
    COUNT(r.rental_id) AS Total_Rentals
FROM 
    category c
JOIN 
    film_category fc ON c.category_id = fc.category_id
JOIN 
    film f ON fc.film_id = f.film_id
JOIN 
    inventory i ON f.film_id = i.film_id
JOIN 
    rental r ON i.inventory_id = r.inventory_id
GROUP BY 
    c.name
ORDER BY 
    Total_Rentals DESC;

    
-- Question 8:
-- Find the average rental rate of movies in each language.
-- Hint: JOIN film and language tables, then use AVG () and GROUP BY.
select *from film;
select *from language;

select language.name, avg(film.rental_rate) as average_rental_rate
from language join film 
on language.language_id = film.language_id
group by language.name;

-- Questions 9 -
-- Display the title of the movie, customer s first name, and last name who rented it.
-- Hint: Use JOIN between the film, inventory, rental, and customer tables.
select *from film;
select *from customer;
select *from rental;
select *from inventory;

SELECT
    film.title,
    customer.first_name,
    customer.last_name
FROM
    film
JOIN
    inventory ON film.film_id = inventory.film_id
JOIN
    rental ON inventory.inventory_id = rental.inventory_id
JOIN
    customer ON rental.customer_id = customer.customer_id;
    
-- Question 10:
-- Retrieve the names of all actors who have appeared in the film "DROP WATERFRONT."
-- Hint: Use JOIN between the film actor, film, and actor tables
select *from film_actor;
select *from film;
select *from actor;

SELECT 
    film.title, actor.first_name, actor.last_name
FROM
    film
        JOIN
    film_actor ON film.film_id = film_actor.film_id
        JOIN
    actor ON actor.actor_id = film_actor.actor_id
WHERE
    film.title = 'DROP WATERFRONT'
ORDER BY actor.first_name;

-- Question 11:
-- Retrieve the customer names along with the total amount they've spent on rentals.
-- Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY

select *from customer;
select *from payment;
select *from rental;

select customer.first_name,
customer.last_name,
sum(payment.amount) as total_amout from rental
join payment on rental.rental_id = payment.rental_id
join customer on customer.customer_id = rental.customer_id
group by customer.first_name,
customer.last_name;

-- Question 12:
-- List the titles of movies rented by each customer in a particular city (e.g., 'London').
-- Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY

select *from customer;
select *from address;
select *from rental;
select *from city;
select *from inventory;
select *from film;

select 
	concat(customer.first_name,
	customer.last_name) as customer_name,
	city.city ,
    film.title
from 
    customer 
join address on customer.address_id = address.address_id
join city on city.city_id = address.city_id
join rental on customer.customer_id = rental.customer_id
join inventory on inventory.inventory_id = rental.inventory_id
join film on inventory.film_id = film.film_id
order by customer_name;